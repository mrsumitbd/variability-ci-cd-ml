language: python
python:
  - "3.6"
  # - pip install .
  # - sudo apt-get update
  # # We do this conditionally because it saves us some downloading if the
  # # version is the same.
  # - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
  #     wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
  #   else
  #     wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  #   fi
  # - bash miniconda.sh -b -p $HOME/miniconda
  # - export PATH="$HOME/miniconda/bin:$PATH"
  # - hash -r
  # - conda config --set always_yes yes --set changeps1 no
  # - conda update -q conda
  # # Useful for debugging any issues with conda
  # - conda info -a

  # - conda env create -n test-environment python=$TRAVIS_PYTHON_VERSION -f environment.yml
  # - source activate test-environment

# see for alternatives to travis wait
# https://github.com/travis-ci/travis-ci/issues/4190

install:
  - pip install -r requirements.txt
  - bash bin/createGraphLibFile.sh

# split tests into stages to avoid 50 mins time limit
# https://docs.travis-ci.com/user/build-stages/
jobs:
  include:
    - stage: "test loading and algorithms"
      script:
        # Output something every 10 minutes or Travis kills the job
        - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - coverage run --rcfile=.coveragerc -m pytest --notebook-tests --long-tests --test-plots localgraphclustering/tests/
        # Killing background sleep loop
        - kill %1
      after_success:
        coveralls
    - stage: "deep tests on algorithms"
      script:
        - while sleep 540; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - python -m pytest --deep-tests localgraphclustering/tests/test_methods_deep.py
        - kill %1
